@page "/apartment/{id:int}"
@using System.Security.Claims;
@model Aapartment.Web.Pages.SitePages.ApartmentPageModel
@{
    ViewData["Title"] = Model.Apartment.Name;
}

<div class="row d-flex">

    <div class="col-md-4 d-flex justify-content-center align-items-center" style="background-color:#00203FFF;">
        <img class="img-fluid rounded" src="/images/@{@Model.Apartment.ImageName}" />
    </div>

    <div class="col-md-8 d-flex flex-column justify-content-start pt-2 pb-2" style="background-color:#00203FFF; color: #c7ecee; padding-left: 2rem">
        <h1 class="text-center display-2">@Model.Apartment.Name</h1>
        <h3 class="text-center mb-4">@Model.Apartment.Address.City,&nbsp;@Model.Apartment.Address.Country</h3>
        <hr class="mt-3 mb-3" />
        <h6 class="mt-3">Description:</h6>
        <p><em>@Model.Apartment.Description</em></p>
        <hr class="mb-3" />
        @if (Model.Apartment.Services != null && Model.Apartment.Services.Count() != 0)
        {
            <div class="d-flex gap-4">
                @foreach (var service in Model.Apartment.Services)
                {

                    <p>@service.Name&nbsp;<i class="@service.Icon"></i></p>

                }
            </div>

        }
        else
        {
            <p><em>There is no information about the apartment services.</em></p>
        }
    </div>

</div>
<p hidden id="fullname">@Model.Name</p>
    <div class="container d-flex flex-column">
        <h3 class="mt-4 mb-4 text-center display-4">Rooms:</h3>
        <hr class="mt-2 mb-2" />
        @if (Model.RoomsForApartment.Results != null && Model.RoomsForApartment.Results.Count() != 0)
        {
            <div class="row d-flex">

                @foreach (var room in Model.RoomsForApartment.Results)
                {
                    <div class="col-lg-3 mb-3 mt-2">
                        <div class="card">
                            <div class="card-header"><h3 id="roomnumber" class="card-title text-center display-5">@room.RoomNumber</h3></div>
                            <div class="card-body">
                                <div class="table-responsive">
                                    <table class="table table-borderless table-sm">
                                        <tr>
                                            <td class="align-middle"><p class="text-muted"><strong>Price for adult:</strong></p></td>
                                            <td class="align-middle text-end"><p class="text-muted">@room.PricePerAdult$</p></td>
                                        </tr>
                                        <tr>
                                            <td class="align-middle"><p class="text-muted"><strong>Price for child:</strong></p></td>
                                            <td class="align-middle text-end"><p class="text-muted">@room.PricePerChild$</p></td>
                                        </tr>
                                        <tr>
                                            <td class="align-middle"><p class="text-muted"><strong>Room capacity: </strong></p></td>
                                            <td class="align-middle text-end"><p class="text-muted">@room.MaxNumberOfPeople</p></td>
                                        </tr>
                                    </table>
                                </div>
                                @if (room.IsAvailabe)
                                {
                                    <button id="buttonForm" class="btn btn-secondary w-100" onclick="bookingFormClick(@room.RoomNumber,@room.Id, @room.PricePerAdult, @room.PricePerChild, @room.MaxNumberOfPeople)" type="button" data-bs-toggle="collapse" data-bs-target="#booking" aria-expanded="false" aria-controls="collapseExample">
                                        Book
                                    </button>

                                }
                                else
                                {
                                    <button class="btn btn-danger w-100" type="button" disabled> Not available</button>
                                }
                            </div>
                        </div>
                    </div>
                }

            </div><div class="collapse mb-4" id="booking">

                <div class="card-header bg-danger p-3 text-light"><h2 id="bookingheader" class="text-center">Room number: </h2></div>
                <div class="card card-body">
                    @if (User.Identity.IsAuthenticated)
                    {
                        <form method="post" onsubmit="return false;">
                            <p id="roomid" hidden></p>
                            <div class="row mb-3">
                                <label for="inputBookStartDate" class="col-sm-6 col-form-label">Start date:</label>
                                <div class="col-sm-6">
                                    <input type="date" class="form-control" id="inputBookStartDate" required>
                                </div>
                            </div>
                            <div class="row mb-3">
                                <label for="inputBookEndDate" class="col-sm-6 col-form-label">End date:</label>
                                <div class="col-sm-6">
                                    <input type="date" class="form-control" id="inputBookEndDate" required>
                                </div>
                            </div>
                            <div class="row mb-3">
                                <label for="inputBookAdults" class="col-sm-6 col-form-label">Number of adults:</label>
                                <div class="col-sm-6">
                                    <input type="number" class="form-control" id="inputBookAdults" required>
                                </div>
                            </div>
                            <div class="row mb-3">
                                <label for="inputBookChildren" class="col-sm-6 col-form-label">Number of children:</label>
                                <div class="col-sm-6">
                                    <input type="number" class="form-control" id="inputBookChildren" required>
                                </div>
                            </div>
                            <div class="row d-flex justify-content-center align-items-center">
                                <button type="submit" class="btn btn-secondary mb-3 w-100" onclick="bookClick()">Book this room</button>
                            </div>
                        </form>
                        <div aria-live="polite" aria-atomic="true" class="bg-danger position-relative bd-example-toasts ">
                            <div class="toast-container position-absolute top-0 start-50 translate-middle-x p-3" id="toastPlacement">
                                <div class="toast bg-danger" id="bookroom">
                                    <div class="toast-body" id="failedUserModify">
                                        Hello, world! This is a toast message.
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <h5 class="mt-4 mb-4 text-center">Please login or register an account to write a review.</h5>
                    }

                </div>
            </div>
        }
        else
        {
            <h5 class="mt-4 mb-4 text-center">There is no rooms for this apartment. Please contact us, if you want to book a room.</h5>
        }
        <paging total-records="Model.RoomsForApartment.AllResultsCount"
                page-no="Model.RoomPageNumber"
                page-size="Model.RoomPageSize"
                max-displayed-pages="6"
                page-size-nav-on-change="get"
                query-string-key-page-no="roomPageNumber"
                query-string-key-page-size="roomPageSize"
                show-first-numbered-page="true"
                show-last-numbered-page="true"
                show-prev-next="true">

        </paging>
    </div>
    <div class="row d-flex flex-column">
        <h5 class="mt-4 mb-2 text-center display-4">Write a review:</h5>
        @if (User.Identity.IsAuthenticated)
        {
    <div class="row pt-4">
        <form method="post" onsubmit="return false;">
            <div class="row mb-3 d-flex justify-content-center align-items-center">
                <div class="col-sm-10">
                    <textarea class="form-control" id="inputReviewContent" required></textarea>
                </div>
            </div>
            <div class="row mb-3 d-flex justify-content-center align-items-center">
                <label for="inputReviewStars" class="col-sm-1 col-form-label">Rating:</label>
                <div class="col-sm-4 d-flex justify-content-center align-items-center">
                    <input type="range" class="form-range" min="1" max="5" value="0" onchange="ratingclick(this.value)" id="inputReviewStars" required>
                </div>
                <div class="col-sm-2 d-flex justify-content-center align-items-center" id="ratingicons">
                    <i style="font-size: 1rem; color: #FDCC0D" class="bi bi-star m-1"></i>
                    <i style="font-size: 1rem; color: #FDCC0D" class="bi bi-star m-1"></i>
                    <i style="font-size: 1rem; color: #FDCC0D" class="bi bi-star m-1"></i>
                    <i style="font-size: 1rem; color: #FDCC0D" class="bi bi-star m-1"></i>
                    <i style="font-size: 1rem; color: #FDCC0D" class="bi bi-star m-1"></i>
                </div>
                <div class="col-sm-3 d-flex justify-content-center align-items-center">
                    <button type="submit" class="btn btn-secondary mb-3 w-100" onclick="writeReview()">Send</button>
                </div>
            </div>
        </form>
        <div aria-live="polite" aria-atomic="true" class="bg-danger position-relative bd-example-toasts ">
            <div class="toast-container position-absolute top-0 start-50 translate-middle-x p-3" id="toastPlacement">
                <div class="toast bg-danger" id="review">
                    <div class="toast-body" id="failedReview">
                        Hello, world! This is a toast message.
                    </div>
                </div>
            </div>
        </div>
    </div>
        }
        else
        {
            <h5 class="mt-4 mb-4 text-center">Please login or register an account to write a review.</h5>
        }

        <hr class="mt-2 mb-2" />
        <h3 class="mt-4 mb-4 text-center display-4">Reviews:</h3>
        <hr class="mt-2 mb-2" />
        <div class="row">
            @if (Model.ReviewsForApartment != null && Model.ReviewsForApartment.Results.Count() != 0)
            {
                <div class="row d-flex">
                    @foreach (var review in Model.ReviewsForApartment.Results)
                    {

                        <div class="card mt-2 mb-2">
                            <div class="row">
                                <div class="col-md-3" style="background-color:#f7f1e3">
                                    <div class="card-body d-flex flex-column align-content-center">
                                        <h2>@review.Name</h2>
                                        <h6>@review.Created.ToShortDateString()</h6>
                                    </div>
                                </div>
                                <div class="col-md-9">
                                    <div class="card-body d-flex align-content-between h-100 flex-column">
                                        <p>@review.Content</p>
                                        <div class="d-flex">
                                            @for (int i = 0; i < review.Stars; i++)
                                            {
                                                <i style="font-size: 1rem; color: #FDCC0D" class="bi bi-star-fill m-1"></i>
                                            }
                                            @for (int i = review.Stars; i < 5; i++)
                                            {
                                                <i style="font-size: 1rem; color: #FDCC0D" class="bi bi-star m-1"></i>
                                            }
                                        </div>

                                    </div>
                                </div>
                            </div>
                        </div>

                    }
                </div>

            }
            else
            {
                <h5 class="mt-4 mb-4 text-center">There is no reviews for this apartment. Be the first reviewer!</h5>
            }
        </div>
    </div>


<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script>

    $(document).mouseup(function (e) {

        e.stopPropagation();
        var container = $("#booking");

        // if the target of the click isn't the container nor a descendant of the container
        if (!container.is(e.target) && container.has(e.target).length === 0) {
            container.collapse('hide');
        }
    });

    function ratingclick(value) {

        var ratingdiv = $("#ratingicons");
        ratingdiv.empty();

        for (i = 0; i < value; i++) {
            ratingdiv.append('<i style = "font-size: 1rem; color: #FDCC0D" class="bi bi-star-fill m-1" ></i>');
        }
        for (i = value; i < 5; i++) {
            ratingdiv.append('<i style="font-size: 1rem; color: #FDCC0D" class="bi bi-star m-1"></i>');
        }

    }

    var adultprice = 0;
    var childprice = 0;
    var maxnumberofpeople = 0;
    var roomnumber = 0;
    var roomid = 0;

    function bookingFormClick(roomn, id, adultp, childp, maxnumber) {
        var container = $("#booking");

        // if the target of the click isn't the container nor a descendant of the container
        if (!container.hasClass('in')) {
            container.collapse('toggle');
        }

        adultprice = adultp;
        roomnumber = roomn;
        roomid = id;
        childprice = childp;
        maxnumberofpeople = maxnumber;

        $("#bookingheader").text("Room number is: " + roomnumber);

        $("#roomid").text(id);
    }

    function bookClick() {
        var roomid = $("#roomid").text();
        var startdate = $("#inputBookStartDate").val();
        var enddate = $("#inputBookEndDate").val();
        var numberofadults = $("#inputBookAdults").val();
        var numberofchildren = $("#inputBookChildren").val();
        var userid = @User.FindFirstValue(ClaimTypes.NameIdentifier);

        var sum = adultprice * numberofadults + childprice * numberofchildren;

        var check = maxnumberofpeople - numberofadults - numberofchildren;
        if (check < 0) {
            $('#failedUserModify').text("Error: the room size is not enough.");
            $('#bookroom').toast('show');
            return;
        }

        var book = {
            startDate: startdate,
            endDate: enddate,
            sumPrice: sum,
            isPaid: false,
            numberOfAdults: parseInt(numberofadults),
            numberOfChildren: parseInt(numberofchildren),
            roomNumber: parseInt(roomnumber),
            userId: parseInt(userid),
            roomId: parseInt(roomid)
        };

        $.ajax({
            url: 'http://localhost:41873/api/bookings',
            method: 'POST',
            data: JSON.stringify(book),
            dataType: 'json',
            contentType: 'application/json',
            success: function (result) {
                location.reload();
            },
            error: function (error) {
                $('#failedUserModify').text('Error: please check your booking information, it\'s not valid.')
                $('.toast').toast('show');
                console.log(error);
            }
        });
    }

    function writeReview() {
        var apartmentid = @Model.Apartment.Id;
        var userid = @User.FindFirstValue(ClaimTypes.NameIdentifier);

        var content = $("#inputReviewContent").val();
        var stars = $("#inputReviewStars").val();

        if (stars < 1 || stars > 5) {
            $('#failedReview').text("Error: review stars should be between 1 and 5.");
            $('#review').toast('show');
            return;
        }
        var name = $("#fullname").text();
        var review = {
            stars: parseInt(stars),
            content: content,
            name: name,
            created: new Date().toISOString().slice(0, 10),
            userId: parseInt(userid),
            apartmentId: parseInt(apartmentid)
        }
        
        $.ajax({
            url: 'http://localhost:41873/api/reviews',
            method: 'POST',
            data: JSON.stringify(review),
            dataType: 'json',
            contentType: 'application/json',
            success: function (result) {
                location.reload();
            },
            error: function (error) {
                $('#failedReview').text('Error: check your input values and try again.')
                $('.toast').toast('show');
                console.log(error);
            }
        });
    }
</script>
