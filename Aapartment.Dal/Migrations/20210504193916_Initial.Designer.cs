// <auto-generated />
using System;
using Aapartment.Dal;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Aapartment.Dal.Migrations
{
    [DbContext(typeof(AapartmentDbContext))]
    [Migration("20210504193916_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Aapartment.Dal.Entities.Apartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Apartments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Pretend you are lost in a magical forest as you perch on a log or curl up in the swinging chair. Soak in the tub, then fall asleep in a heavenly bedroom with cloud-painted walls and twinkling lights. And when you wake up, the espresso machine awaits.",
                            ImageName = "alap1.jpg",
                            Name = "Panama Hotel"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Unwind at this stunning French Provencal beachside cottage. The house was lovingly built with stone floors, high-beamed ceilings, and antique details for a luxurious yet charming feel. Enjoy the sea and mountain views from the pool and lush garden. The house is located in the enclave of Llandudno Beach, a locals-only spot with unspoilt, fine white sand and curling surfing waves. Although shops and restaurants are only a five-minute drive away, the area feels peaceful and secluded.",
                            ImageName = "alap2.jpg",
                            Name = "Mercur Hotel"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Take an early morning stroll and enjoy the Trevi Fountain without the tourists. Wander around the historic streets while the city sleeps, then head back for a morning coffee at this urban-chic studio with a suspended loft bedroom.",
                            ImageName = "alap3.jpg",
                            Name = "Langmoon Hotel"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Take an early morning stroll and enjoy the Trevi Fountain without the tourists. Wander around the historic streets while the city sleeps, then head back for a morning coffee at this urban-chic studio with a suspended loft bedroom.",
                            ImageName = "alap4.jpg",
                            Name = "Malaha Hotel"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Pretend you are lost in a magical forest as you perch on a log or curl up in the swinging chair. Soak in the tub, then fall asleep in a heavenly bedroom with cloud-painted walls and twinkling lights. And when you wake up, the espresso machine awaits.",
                            ImageName = "alap5.jpg",
                            Name = "Retro Hotel"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Unwind at this stunning French Provencal beachside cottage. The house was lovingly built with stone floors, high-beamed ceilings, and antique details for a luxurious yet charming feel. Enjoy the sea and mountain views from the pool and lush garden. The house is located in the enclave of Llandudno Beach, a locals-only spot with unspoilt, fine white sand and curling surfing waves. Although shops and restaurants are only a five-minute drive away, the area feels peaceful and secluded.",
                            ImageName = "alap6.jpg",
                            Name = "Sunshine Hotel"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Take an early morning stroll and enjoy the Trevi Fountain without the tourists. Wander around the historic streets while the city sleeps, then head back for a morning coffee at this urban-chic studio with a suspended loft bedroom.",
                            ImageName = "alap7.jpg",
                            Name = "Happymoon Hotel"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Take an early morning stroll and enjoy the Trevi Fountain without the tourists. Wander around the historic streets while the city sleeps, then head back for a morning coffee at this urban-chic studio with a suspended loft bedroom.",
                            ImageName = "alap8.jpg",
                            Name = "Aquarell Hotel"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Pretend you are lost in a magical forest as you perch on a log or curl up in the swinging chair. Soak in the tub, then fall asleep in a heavenly bedroom with cloud-painted walls and twinkling lights. And when you wake up, the espresso machine awaits.",
                            ImageName = "alap9.jpg",
                            Name = "Phonin Hotel"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Unwind at this stunning French Provencal beachside cottage. The house was lovingly built with stone floors, high-beamed ceilings, and antique details for a luxurious yet charming feel. Enjoy the sea and mountain views from the pool and lush garden. The house is located in the enclave of Llandudno Beach, a locals-only spot with unspoilt, fine white sand and curling surfing waves. Although shops and restaurants are only a five-minute drive away, the area feels peaceful and secluded.",
                            ImageName = "alap10.jpeg",
                            Name = "Willis Hotel"
                        },
                        new
                        {
                            Id = 11,
                            Description = "Take an early morning stroll and enjoy the Trevi Fountain without the tourists. Wander around the historic streets while the city sleeps, then head back for a morning coffee at this urban-chic studio with a suspended loft bedroom.",
                            ImageName = "alap11.jpeg",
                            Name = "Pandora Hotel"
                        },
                        new
                        {
                            Id = 12,
                            Description = "Take an early morning stroll and enjoy the Trevi Fountain without the tourists. Wander around the historic streets while the city sleeps, then head back for a morning coffee at this urban-chic studio with a suspended loft bedroom.",
                            ImageName = "alap12.jpg",
                            Name = "Nostra Hotel"
                        },
                        new
                        {
                            Id = 13,
                            Description = "Pretend you are lost in a magical forest as you perch on a log or curl up in the swinging chair. Soak in the tub, then fall asleep in a heavenly bedroom with cloud-painted walls and twinkling lights. And when you wake up, the espresso machine awaits.",
                            ImageName = "alap13.jpg",
                            Name = "Nautis Hotel"
                        },
                        new
                        {
                            Id = 14,
                            Description = "Unwind at this stunning French Provencal beachside cottage. The house was lovingly built with stone floors, high-beamed ceilings, and antique details for a luxurious yet charming feel. Enjoy the sea and mountain views from the pool and lush garden. The house is located in the enclave of Llandudno Beach, a locals-only spot with unspoilt, fine white sand and curling surfing waves. Although shops and restaurants are only a five-minute drive away, the area feels peaceful and secluded.",
                            ImageName = "alap14.jpg",
                            Name = "Edgbaston Hotel"
                        },
                        new
                        {
                            Id = 15,
                            Description = "Take an early morning stroll and enjoy the Trevi Fountain without the tourists. Wander around the historic streets while the city sleeps, then head back for a morning coffee at this urban-chic studio with a suspended loft bedroom.",
                            ImageName = "alap15.jpg",
                            Name = "Indigo Hotel"
                        },
                        new
                        {
                            Id = 16,
                            Description = "Take an early morning stroll and enjoy the Trevi Fountain without the tourists. Wander around the historic streets while the city sleeps, then head back for a morning coffee at this urban-chic studio with a suspended loft bedroom.",
                            ImageName = "alap16.jpg",
                            Name = "Boulvard Hotel"
                        });
                });

            modelBuilder.Entity("Aapartment.Dal.Entities.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<int>("NumberOfAdults")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfChildren")
                        .HasColumnType("int");

                    b.Property<int?>("RoomId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SumPrice")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.HasIndex("UserId1");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndDate = new DateTime(2021, 5, 16, 21, 39, 15, 954, DateTimeKind.Local).AddTicks(2424),
                            IsPaid = true,
                            NumberOfAdults = 3,
                            NumberOfChildren = 2,
                            RoomId = 2,
                            StartDate = new DateTime(2021, 5, 8, 21, 39, 15, 954, DateTimeKind.Local).AddTicks(1892),
                            SumPrice = 160300,
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            EndDate = new DateTime(2021, 5, 14, 21, 39, 15, 954, DateTimeKind.Local).AddTicks(5039),
                            IsPaid = false,
                            NumberOfAdults = 2,
                            NumberOfChildren = 3,
                            RoomId = 5,
                            StartDate = new DateTime(2021, 5, 9, 21, 39, 15, 954, DateTimeKind.Local).AddTicks(5022),
                            SumPrice = 260300,
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            EndDate = new DateTime(2021, 5, 26, 21, 39, 15, 954, DateTimeKind.Local).AddTicks(5097),
                            IsPaid = true,
                            NumberOfAdults = 1,
                            NumberOfChildren = 0,
                            RoomId = 10,
                            StartDate = new DateTime(2021, 5, 19, 21, 39, 15, 954, DateTimeKind.Local).AddTicks(5094),
                            SumPrice = 212330,
                            UserId = 4
                        },
                        new
                        {
                            Id = 4,
                            EndDate = new DateTime(2021, 7, 5, 21, 39, 15, 954, DateTimeKind.Local).AddTicks(5104),
                            IsPaid = true,
                            NumberOfAdults = 2,
                            NumberOfChildren = 4,
                            RoomId = 12,
                            StartDate = new DateTime(2021, 6, 14, 21, 39, 15, 954, DateTimeKind.Local).AddTicks(5101),
                            SumPrice = 53300,
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            EndDate = new DateTime(2021, 5, 27, 21, 39, 15, 954, DateTimeKind.Local).AddTicks(5110),
                            IsPaid = false,
                            NumberOfAdults = 2,
                            NumberOfChildren = 3,
                            RoomId = 25,
                            StartDate = new DateTime(2021, 5, 12, 21, 39, 15, 954, DateTimeKind.Local).AddTicks(5107),
                            SumPrice = 100600,
                            UserId = 3
                        },
                        new
                        {
                            Id = 6,
                            EndDate = new DateTime(2021, 6, 14, 21, 39, 15, 954, DateTimeKind.Local).AddTicks(5116),
                            IsPaid = true,
                            NumberOfAdults = 2,
                            NumberOfChildren = 2,
                            RoomId = 14,
                            StartDate = new DateTime(2021, 5, 8, 21, 39, 15, 954, DateTimeKind.Local).AddTicks(5114),
                            SumPrice = 51111,
                            UserId = 4
                        },
                        new
                        {
                            Id = 7,
                            EndDate = new DateTime(2021, 6, 5, 21, 39, 15, 954, DateTimeKind.Local).AddTicks(5123),
                            IsPaid = true,
                            NumberOfAdults = 3,
                            NumberOfChildren = 2,
                            RoomId = 21,
                            StartDate = new DateTime(2021, 5, 18, 21, 39, 15, 954, DateTimeKind.Local).AddTicks(5120),
                            SumPrice = 600300,
                            UserId = 2
                        },
                        new
                        {
                            Id = 8,
                            EndDate = new DateTime(2021, 5, 23, 21, 39, 15, 954, DateTimeKind.Local).AddTicks(5129),
                            IsPaid = false,
                            NumberOfAdults = 2,
                            NumberOfChildren = 3,
                            RoomId = 17,
                            StartDate = new DateTime(2021, 5, 19, 21, 39, 15, 954, DateTimeKind.Local).AddTicks(5126),
                            SumPrice = 421300,
                            UserId = 3
                        },
                        new
                        {
                            Id = 9,
                            EndDate = new DateTime(2021, 9, 3, 21, 39, 15, 954, DateTimeKind.Local).AddTicks(5171),
                            IsPaid = true,
                            NumberOfAdults = 3,
                            NumberOfChildren = 2,
                            RoomId = 16,
                            StartDate = new DateTime(2021, 8, 24, 21, 39, 15, 954, DateTimeKind.Local).AddTicks(5168),
                            SumPrice = 562300,
                            UserId = 4
                        },
                        new
                        {
                            Id = 10,
                            EndDate = new DateTime(2021, 7, 21, 21, 39, 15, 954, DateTimeKind.Local).AddTicks(5178),
                            IsPaid = true,
                            NumberOfAdults = 3,
                            NumberOfChildren = 2,
                            RoomId = 23,
                            StartDate = new DateTime(2021, 6, 14, 21, 39, 15, 954, DateTimeKind.Local).AddTicks(5175),
                            SumPrice = 960342,
                            UserId = 2
                        },
                        new
                        {
                            Id = 11,
                            EndDate = new DateTime(2021, 6, 25, 21, 39, 15, 954, DateTimeKind.Local).AddTicks(5184),
                            IsPaid = false,
                            NumberOfAdults = 1,
                            NumberOfChildren = 0,
                            RoomId = 13,
                            StartDate = new DateTime(2021, 6, 24, 21, 39, 15, 954, DateTimeKind.Local).AddTicks(5181),
                            SumPrice = 6360,
                            UserId = 3
                        },
                        new
                        {
                            Id = 12,
                            EndDate = new DateTime(2021, 7, 15, 21, 39, 15, 954, DateTimeKind.Local).AddTicks(5190),
                            IsPaid = true,
                            NumberOfAdults = 3,
                            NumberOfChildren = 1,
                            RoomId = 10,
                            StartDate = new DateTime(2021, 7, 8, 21, 39, 15, 954, DateTimeKind.Local).AddTicks(5188),
                            SumPrice = 95530,
                            UserId = 4
                        },
                        new
                        {
                            Id = 13,
                            EndDate = new DateTime(2021, 5, 22, 21, 39, 15, 954, DateTimeKind.Local).AddTicks(5196),
                            IsPaid = true,
                            NumberOfAdults = 3,
                            NumberOfChildren = 2,
                            RoomId = 17,
                            StartDate = new DateTime(2021, 5, 12, 21, 39, 15, 954, DateTimeKind.Local).AddTicks(5194),
                            SumPrice = 415300,
                            UserId = 2
                        },
                        new
                        {
                            Id = 14,
                            EndDate = new DateTime(2021, 6, 3, 21, 39, 15, 954, DateTimeKind.Local).AddTicks(5203),
                            IsPaid = false,
                            NumberOfAdults = 2,
                            NumberOfChildren = 2,
                            RoomId = 5,
                            StartDate = new DateTime(2021, 5, 29, 21, 39, 15, 954, DateTimeKind.Local).AddTicks(5200),
                            SumPrice = 333440,
                            UserId = 3
                        },
                        new
                        {
                            Id = 15,
                            EndDate = new DateTime(2021, 7, 9, 21, 39, 15, 954, DateTimeKind.Local).AddTicks(5209),
                            IsPaid = true,
                            NumberOfAdults = 4,
                            NumberOfChildren = 2,
                            RoomId = 14,
                            StartDate = new DateTime(2021, 6, 24, 21, 39, 15, 954, DateTimeKind.Local).AddTicks(5206),
                            SumPrice = 73031,
                            UserId = 4
                        },
                        new
                        {
                            Id = 16,
                            EndDate = new DateTime(2021, 6, 14, 21, 39, 15, 954, DateTimeKind.Local).AddTicks(5215),
                            IsPaid = true,
                            NumberOfAdults = 3,
                            NumberOfChildren = 2,
                            RoomId = 21,
                            StartDate = new DateTime(2021, 5, 10, 21, 39, 15, 954, DateTimeKind.Local).AddTicks(5212),
                            SumPrice = 976230,
                            UserId = 2
                        },
                        new
                        {
                            Id = 17,
                            EndDate = new DateTime(2021, 6, 28, 21, 39, 15, 954, DateTimeKind.Local).AddTicks(5221),
                            IsPaid = false,
                            NumberOfAdults = 2,
                            NumberOfChildren = 2,
                            RoomId = 8,
                            StartDate = new DateTime(2021, 6, 18, 21, 39, 15, 954, DateTimeKind.Local).AddTicks(5218),
                            SumPrice = 52660,
                            UserId = 3
                        },
                        new
                        {
                            Id = 18,
                            EndDate = new DateTime(2021, 7, 10, 21, 39, 15, 954, DateTimeKind.Local).AddTicks(5227),
                            IsPaid = true,
                            NumberOfAdults = 2,
                            NumberOfChildren = 0,
                            RoomId = 10,
                            StartDate = new DateTime(2021, 7, 6, 21, 39, 15, 954, DateTimeKind.Local).AddTicks(5225),
                            SumPrice = 63960,
                            UserId = 4
                        });
                });

            modelBuilder.Entity("Aapartment.Dal.Entities.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("Stars")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApartmentId");

                    b.HasIndex("UserId");

                    b.HasIndex("UserId1");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApartmentId = 1,
                            Content = "One of the best apartment here.",
                            Created = new DateTime(2021, 5, 4, 21, 39, 15, 955, DateTimeKind.Local).AddTicks(5657),
                            Stars = 4,
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            ApartmentId = 2,
                            Content = "There are a lot of bugs here!",
                            Created = new DateTime(2021, 5, 4, 21, 39, 15, 955, DateTimeKind.Local).AddTicks(6869),
                            Stars = 1,
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            ApartmentId = 3,
                            Content = "I could find a better place, but it's ok.",
                            Created = new DateTime(2021, 5, 4, 21, 39, 15, 955, DateTimeKind.Local).AddTicks(6897),
                            Stars = 3,
                            UserId = 4
                        },
                        new
                        {
                            Id = 4,
                            ApartmentId = 4,
                            Content = "One of the best apartment here.",
                            Created = new DateTime(2021, 5, 4, 21, 39, 15, 955, DateTimeKind.Local).AddTicks(6901),
                            Stars = 5,
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            ApartmentId = 5,
                            Content = "There are a lot of cockroach here!",
                            Created = new DateTime(2021, 5, 4, 21, 39, 15, 955, DateTimeKind.Local).AddTicks(6904),
                            Stars = 2,
                            UserId = 3
                        },
                        new
                        {
                            Id = 6,
                            ApartmentId = 6,
                            Content = "I could find a better place, but it's ok.",
                            Created = new DateTime(2021, 5, 4, 21, 39, 15, 955, DateTimeKind.Local).AddTicks(6908),
                            Stars = 3,
                            UserId = 4
                        },
                        new
                        {
                            Id = 7,
                            ApartmentId = 7,
                            Content = "One of the best apartment here.",
                            Created = new DateTime(2021, 5, 4, 21, 39, 15, 955, DateTimeKind.Local).AddTicks(6911),
                            Stars = 4,
                            UserId = 2
                        },
                        new
                        {
                            Id = 8,
                            ApartmentId = 8,
                            Content = "There are a lot of bugs here!",
                            Created = new DateTime(2021, 5, 4, 21, 39, 15, 955, DateTimeKind.Local).AddTicks(6914),
                            Stars = 1,
                            UserId = 3
                        },
                        new
                        {
                            Id = 9,
                            ApartmentId = 9,
                            Content = "I could find a better place, but it's ok.",
                            Created = new DateTime(2021, 5, 4, 21, 39, 15, 955, DateTimeKind.Local).AddTicks(6918),
                            Stars = 3,
                            UserId = 4
                        },
                        new
                        {
                            Id = 10,
                            ApartmentId = 10,
                            Content = "One of the best apartment here.",
                            Created = new DateTime(2021, 5, 4, 21, 39, 15, 955, DateTimeKind.Local).AddTicks(6921),
                            Stars = 4,
                            UserId = 2
                        },
                        new
                        {
                            Id = 11,
                            ApartmentId = 11,
                            Content = "There are a lot of bugs here!",
                            Created = new DateTime(2021, 5, 4, 21, 39, 15, 955, DateTimeKind.Local).AddTicks(6925),
                            Stars = 1,
                            UserId = 3
                        },
                        new
                        {
                            Id = 12,
                            ApartmentId = 12,
                            Content = "I could find a better place, but it's ok.",
                            Created = new DateTime(2021, 5, 4, 21, 39, 15, 955, DateTimeKind.Local).AddTicks(6928),
                            Stars = 3,
                            UserId = 4
                        },
                        new
                        {
                            Id = 13,
                            ApartmentId = 13,
                            Content = "One of the best apartment here.",
                            Created = new DateTime(2021, 5, 4, 21, 39, 15, 955, DateTimeKind.Local).AddTicks(6931),
                            Stars = 4,
                            UserId = 2
                        },
                        new
                        {
                            Id = 14,
                            ApartmentId = 14,
                            Content = "There are a lot of bugs here!",
                            Created = new DateTime(2021, 5, 4, 21, 39, 15, 955, DateTimeKind.Local).AddTicks(6934),
                            Stars = 1,
                            UserId = 3
                        },
                        new
                        {
                            Id = 15,
                            ApartmentId = 14,
                            Content = "I could find a better place, but it's ok.",
                            Created = new DateTime(2021, 5, 4, 21, 39, 15, 955, DateTimeKind.Local).AddTicks(6937),
                            Stars = 3,
                            UserId = 4
                        },
                        new
                        {
                            Id = 16,
                            ApartmentId = 15,
                            Content = "One of the best apartment here.",
                            Created = new DateTime(2021, 5, 4, 21, 39, 15, 955, DateTimeKind.Local).AddTicks(6941),
                            Stars = 4,
                            UserId = 2
                        },
                        new
                        {
                            Id = 17,
                            ApartmentId = 15,
                            Content = "There are a lot of bugs here!",
                            Created = new DateTime(2021, 5, 4, 21, 39, 15, 955, DateTimeKind.Local).AddTicks(6944),
                            Stars = 1,
                            UserId = 3
                        },
                        new
                        {
                            Id = 18,
                            ApartmentId = 15,
                            Content = "I could find a better place, but it's ok.",
                            Created = new DateTime(2021, 5, 4, 21, 39, 15, 955, DateTimeKind.Local).AddTicks(6947),
                            Stars = 3,
                            UserId = 4
                        },
                        new
                        {
                            Id = 19,
                            ApartmentId = 16,
                            Content = "One of the best apartment here.",
                            Created = new DateTime(2021, 5, 4, 21, 39, 15, 955, DateTimeKind.Local).AddTicks(6951),
                            Stars = 4,
                            UserId = 2
                        },
                        new
                        {
                            Id = 20,
                            ApartmentId = 16,
                            Content = "There are a lot of bugs here!",
                            Created = new DateTime(2021, 5, 4, 21, 39, 15, 955, DateTimeKind.Local).AddTicks(6954),
                            Stars = 1,
                            UserId = 3
                        },
                        new
                        {
                            Id = 21,
                            ApartmentId = 16,
                            Content = "I could find a better place, but it's ok.",
                            Created = new DateTime(2021, 5, 4, 21, 39, 15, 955, DateTimeKind.Local).AddTicks(6957),
                            Stars = 3,
                            UserId = 4
                        });
                });

            modelBuilder.Entity("Aapartment.Dal.Entities.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApartmentId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAvailabe")
                        .HasColumnType("bit");

                    b.Property<int>("MaxNumberOfPeople")
                        .HasColumnType("int");

                    b.Property<int>("PricePerAdult")
                        .HasColumnType("int");

                    b.Property<int>("PricePerChild")
                        .HasColumnType("int");

                    b.Property<int>("RoomNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApartmentId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApartmentId = 1,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 4,
                            PricePerAdult = 5000,
                            PricePerChild = 2400,
                            RoomNumber = 101
                        },
                        new
                        {
                            Id = 2,
                            ApartmentId = 1,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 3,
                            PricePerAdult = 5500,
                            PricePerChild = 2450,
                            RoomNumber = 102
                        },
                        new
                        {
                            Id = 3,
                            ApartmentId = 1,
                            IsAvailabe = false,
                            MaxNumberOfPeople = 7,
                            PricePerAdult = 5400,
                            PricePerChild = 2000,
                            RoomNumber = 103
                        },
                        new
                        {
                            Id = 4,
                            ApartmentId = 1,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 4,
                            PricePerAdult = 6000,
                            PricePerChild = 3400,
                            RoomNumber = 104
                        },
                        new
                        {
                            Id = 5,
                            ApartmentId = 1,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 4,
                            PricePerAdult = 5050,
                            PricePerChild = 2700,
                            RoomNumber = 105
                        },
                        new
                        {
                            Id = 6,
                            ApartmentId = 2,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 4,
                            PricePerAdult = 5000,
                            PricePerChild = 2400,
                            RoomNumber = 101
                        },
                        new
                        {
                            Id = 7,
                            ApartmentId = 2,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 3,
                            PricePerAdult = 5500,
                            PricePerChild = 2450,
                            RoomNumber = 102
                        },
                        new
                        {
                            Id = 8,
                            ApartmentId = 2,
                            IsAvailabe = false,
                            MaxNumberOfPeople = 7,
                            PricePerAdult = 5400,
                            PricePerChild = 2000,
                            RoomNumber = 103
                        },
                        new
                        {
                            Id = 9,
                            ApartmentId = 2,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 4,
                            PricePerAdult = 6000,
                            PricePerChild = 3400,
                            RoomNumber = 104
                        },
                        new
                        {
                            Id = 10,
                            ApartmentId = 2,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 4,
                            PricePerAdult = 5050,
                            PricePerChild = 2700,
                            RoomNumber = 105
                        },
                        new
                        {
                            Id = 11,
                            ApartmentId = 3,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 4,
                            PricePerAdult = 5000,
                            PricePerChild = 2400,
                            RoomNumber = 101
                        },
                        new
                        {
                            Id = 12,
                            ApartmentId = 3,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 3,
                            PricePerAdult = 5500,
                            PricePerChild = 2450,
                            RoomNumber = 102
                        },
                        new
                        {
                            Id = 13,
                            ApartmentId = 3,
                            IsAvailabe = false,
                            MaxNumberOfPeople = 7,
                            PricePerAdult = 5400,
                            PricePerChild = 2000,
                            RoomNumber = 103
                        },
                        new
                        {
                            Id = 14,
                            ApartmentId = 3,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 4,
                            PricePerAdult = 6000,
                            PricePerChild = 3400,
                            RoomNumber = 104
                        },
                        new
                        {
                            Id = 15,
                            ApartmentId = 3,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 4,
                            PricePerAdult = 5050,
                            PricePerChild = 2700,
                            RoomNumber = 105
                        },
                        new
                        {
                            Id = 16,
                            ApartmentId = 4,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 4,
                            PricePerAdult = 5000,
                            PricePerChild = 2400,
                            RoomNumber = 101
                        },
                        new
                        {
                            Id = 17,
                            ApartmentId = 4,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 3,
                            PricePerAdult = 5500,
                            PricePerChild = 2450,
                            RoomNumber = 102
                        },
                        new
                        {
                            Id = 18,
                            ApartmentId = 4,
                            IsAvailabe = false,
                            MaxNumberOfPeople = 7,
                            PricePerAdult = 5400,
                            PricePerChild = 2000,
                            RoomNumber = 103
                        },
                        new
                        {
                            Id = 19,
                            ApartmentId = 4,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 4,
                            PricePerAdult = 6000,
                            PricePerChild = 3400,
                            RoomNumber = 104
                        },
                        new
                        {
                            Id = 20,
                            ApartmentId = 4,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 4,
                            PricePerAdult = 5050,
                            PricePerChild = 2700,
                            RoomNumber = 105
                        },
                        new
                        {
                            Id = 21,
                            ApartmentId = 5,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 4,
                            PricePerAdult = 5000,
                            PricePerChild = 2400,
                            RoomNumber = 101
                        },
                        new
                        {
                            Id = 22,
                            ApartmentId = 5,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 3,
                            PricePerAdult = 5500,
                            PricePerChild = 2450,
                            RoomNumber = 102
                        },
                        new
                        {
                            Id = 23,
                            ApartmentId = 5,
                            IsAvailabe = false,
                            MaxNumberOfPeople = 7,
                            PricePerAdult = 5400,
                            PricePerChild = 2000,
                            RoomNumber = 103
                        },
                        new
                        {
                            Id = 24,
                            ApartmentId = 5,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 4,
                            PricePerAdult = 6000,
                            PricePerChild = 3400,
                            RoomNumber = 104
                        },
                        new
                        {
                            Id = 25,
                            ApartmentId = 5,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 4,
                            PricePerAdult = 5050,
                            PricePerChild = 2700,
                            RoomNumber = 105
                        },
                        new
                        {
                            Id = 26,
                            ApartmentId = 5,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 4,
                            PricePerAdult = 5000,
                            PricePerChild = 2400,
                            RoomNumber = 101
                        },
                        new
                        {
                            Id = 27,
                            ApartmentId = 5,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 3,
                            PricePerAdult = 5500,
                            PricePerChild = 2450,
                            RoomNumber = 102
                        },
                        new
                        {
                            Id = 28,
                            ApartmentId = 6,
                            IsAvailabe = false,
                            MaxNumberOfPeople = 7,
                            PricePerAdult = 5400,
                            PricePerChild = 2000,
                            RoomNumber = 103
                        },
                        new
                        {
                            Id = 29,
                            ApartmentId = 6,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 4,
                            PricePerAdult = 6000,
                            PricePerChild = 3400,
                            RoomNumber = 104
                        },
                        new
                        {
                            Id = 30,
                            ApartmentId = 6,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 4,
                            PricePerAdult = 5050,
                            PricePerChild = 2700,
                            RoomNumber = 105
                        },
                        new
                        {
                            Id = 31,
                            ApartmentId = 7,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 4,
                            PricePerAdult = 5000,
                            PricePerChild = 2400,
                            RoomNumber = 101
                        },
                        new
                        {
                            Id = 32,
                            ApartmentId = 7,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 3,
                            PricePerAdult = 5500,
                            PricePerChild = 2450,
                            RoomNumber = 102
                        },
                        new
                        {
                            Id = 33,
                            ApartmentId = 7,
                            IsAvailabe = false,
                            MaxNumberOfPeople = 7,
                            PricePerAdult = 5400,
                            PricePerChild = 2000,
                            RoomNumber = 103
                        },
                        new
                        {
                            Id = 34,
                            ApartmentId = 7,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 4,
                            PricePerAdult = 6000,
                            PricePerChild = 3400,
                            RoomNumber = 104
                        },
                        new
                        {
                            Id = 35,
                            ApartmentId = 8,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 4,
                            PricePerAdult = 5050,
                            PricePerChild = 2700,
                            RoomNumber = 105
                        },
                        new
                        {
                            Id = 36,
                            ApartmentId = 8,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 4,
                            PricePerAdult = 5000,
                            PricePerChild = 2400,
                            RoomNumber = 101
                        },
                        new
                        {
                            Id = 37,
                            ApartmentId = 8,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 3,
                            PricePerAdult = 5500,
                            PricePerChild = 2450,
                            RoomNumber = 102
                        },
                        new
                        {
                            Id = 38,
                            ApartmentId = 8,
                            IsAvailabe = false,
                            MaxNumberOfPeople = 7,
                            PricePerAdult = 5400,
                            PricePerChild = 2000,
                            RoomNumber = 103
                        },
                        new
                        {
                            Id = 39,
                            ApartmentId = 8,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 4,
                            PricePerAdult = 6000,
                            PricePerChild = 3400,
                            RoomNumber = 104
                        },
                        new
                        {
                            Id = 40,
                            ApartmentId = 8,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 4,
                            PricePerAdult = 5050,
                            PricePerChild = 2700,
                            RoomNumber = 105
                        },
                        new
                        {
                            Id = 41,
                            ApartmentId = 9,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 4,
                            PricePerAdult = 5000,
                            PricePerChild = 2400,
                            RoomNumber = 101
                        },
                        new
                        {
                            Id = 42,
                            ApartmentId = 9,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 3,
                            PricePerAdult = 5500,
                            PricePerChild = 2450,
                            RoomNumber = 102
                        },
                        new
                        {
                            Id = 43,
                            ApartmentId = 9,
                            IsAvailabe = false,
                            MaxNumberOfPeople = 7,
                            PricePerAdult = 5400,
                            PricePerChild = 2000,
                            RoomNumber = 103
                        },
                        new
                        {
                            Id = 44,
                            ApartmentId = 10,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 4,
                            PricePerAdult = 6000,
                            PricePerChild = 3400,
                            RoomNumber = 104
                        },
                        new
                        {
                            Id = 45,
                            ApartmentId = 10,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 4,
                            PricePerAdult = 5050,
                            PricePerChild = 2700,
                            RoomNumber = 105
                        },
                        new
                        {
                            Id = 46,
                            ApartmentId = 10,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 4,
                            PricePerAdult = 5000,
                            PricePerChild = 2400,
                            RoomNumber = 101
                        },
                        new
                        {
                            Id = 47,
                            ApartmentId = 10,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 3,
                            PricePerAdult = 5500,
                            PricePerChild = 2450,
                            RoomNumber = 102
                        },
                        new
                        {
                            Id = 48,
                            ApartmentId = 11,
                            IsAvailabe = false,
                            MaxNumberOfPeople = 7,
                            PricePerAdult = 5400,
                            PricePerChild = 2000,
                            RoomNumber = 103
                        },
                        new
                        {
                            Id = 49,
                            ApartmentId = 11,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 4,
                            PricePerAdult = 6000,
                            PricePerChild = 3400,
                            RoomNumber = 104
                        },
                        new
                        {
                            Id = 50,
                            ApartmentId = 11,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 4,
                            PricePerAdult = 5050,
                            PricePerChild = 2700,
                            RoomNumber = 105
                        },
                        new
                        {
                            Id = 51,
                            ApartmentId = 12,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 4,
                            PricePerAdult = 5000,
                            PricePerChild = 2400,
                            RoomNumber = 101
                        },
                        new
                        {
                            Id = 52,
                            ApartmentId = 13,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 3,
                            PricePerAdult = 5500,
                            PricePerChild = 2450,
                            RoomNumber = 102
                        },
                        new
                        {
                            Id = 53,
                            ApartmentId = 13,
                            IsAvailabe = false,
                            MaxNumberOfPeople = 7,
                            PricePerAdult = 5400,
                            PricePerChild = 2000,
                            RoomNumber = 103
                        },
                        new
                        {
                            Id = 54,
                            ApartmentId = 13,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 4,
                            PricePerAdult = 6000,
                            PricePerChild = 3400,
                            RoomNumber = 104
                        },
                        new
                        {
                            Id = 55,
                            ApartmentId = 13,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 4,
                            PricePerAdult = 5050,
                            PricePerChild = 2700,
                            RoomNumber = 105
                        },
                        new
                        {
                            Id = 56,
                            ApartmentId = 14,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 4,
                            PricePerAdult = 5000,
                            PricePerChild = 2400,
                            RoomNumber = 101
                        },
                        new
                        {
                            Id = 57,
                            ApartmentId = 14,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 3,
                            PricePerAdult = 5500,
                            PricePerChild = 2450,
                            RoomNumber = 102
                        },
                        new
                        {
                            Id = 58,
                            ApartmentId = 14,
                            IsAvailabe = false,
                            MaxNumberOfPeople = 7,
                            PricePerAdult = 5400,
                            PricePerChild = 2000,
                            RoomNumber = 103
                        },
                        new
                        {
                            Id = 59,
                            ApartmentId = 14,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 4,
                            PricePerAdult = 6000,
                            PricePerChild = 3400,
                            RoomNumber = 104
                        },
                        new
                        {
                            Id = 60,
                            ApartmentId = 14,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 4,
                            PricePerAdult = 5050,
                            PricePerChild = 2700,
                            RoomNumber = 105
                        },
                        new
                        {
                            Id = 61,
                            ApartmentId = 15,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 4,
                            PricePerAdult = 5000,
                            PricePerChild = 2400,
                            RoomNumber = 101
                        },
                        new
                        {
                            Id = 62,
                            ApartmentId = 15,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 3,
                            PricePerAdult = 5500,
                            PricePerChild = 2450,
                            RoomNumber = 102
                        },
                        new
                        {
                            Id = 63,
                            ApartmentId = 15,
                            IsAvailabe = false,
                            MaxNumberOfPeople = 7,
                            PricePerAdult = 5400,
                            PricePerChild = 2000,
                            RoomNumber = 103
                        },
                        new
                        {
                            Id = 64,
                            ApartmentId = 15,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 4,
                            PricePerAdult = 6000,
                            PricePerChild = 3400,
                            RoomNumber = 104
                        },
                        new
                        {
                            Id = 65,
                            ApartmentId = 15,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 4,
                            PricePerAdult = 5050,
                            PricePerChild = 2700,
                            RoomNumber = 105
                        },
                        new
                        {
                            Id = 66,
                            ApartmentId = 15,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 4,
                            PricePerAdult = 5000,
                            PricePerChild = 2400,
                            RoomNumber = 101
                        },
                        new
                        {
                            Id = 67,
                            ApartmentId = 15,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 3,
                            PricePerAdult = 5500,
                            PricePerChild = 2450,
                            RoomNumber = 102
                        },
                        new
                        {
                            Id = 68,
                            ApartmentId = 15,
                            IsAvailabe = false,
                            MaxNumberOfPeople = 7,
                            PricePerAdult = 5400,
                            PricePerChild = 2000,
                            RoomNumber = 103
                        },
                        new
                        {
                            Id = 69,
                            ApartmentId = 15,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 4,
                            PricePerAdult = 6000,
                            PricePerChild = 3400,
                            RoomNumber = 104
                        },
                        new
                        {
                            Id = 70,
                            ApartmentId = 15,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 4,
                            PricePerAdult = 5050,
                            PricePerChild = 2700,
                            RoomNumber = 105
                        },
                        new
                        {
                            Id = 71,
                            ApartmentId = 16,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 4,
                            PricePerAdult = 5000,
                            PricePerChild = 2400,
                            RoomNumber = 101
                        },
                        new
                        {
                            Id = 72,
                            ApartmentId = 16,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 3,
                            PricePerAdult = 5500,
                            PricePerChild = 2450,
                            RoomNumber = 102
                        },
                        new
                        {
                            Id = 73,
                            ApartmentId = 16,
                            IsAvailabe = false,
                            MaxNumberOfPeople = 7,
                            PricePerAdult = 5400,
                            PricePerChild = 2000,
                            RoomNumber = 103
                        },
                        new
                        {
                            Id = 74,
                            ApartmentId = 16,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 4,
                            PricePerAdult = 6000,
                            PricePerChild = 3400,
                            RoomNumber = 104
                        },
                        new
                        {
                            Id = 75,
                            ApartmentId = 16,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 4,
                            PricePerAdult = 5050,
                            PricePerChild = 2700,
                            RoomNumber = 105
                        },
                        new
                        {
                            Id = 76,
                            ApartmentId = 16,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 4,
                            PricePerAdult = 5000,
                            PricePerChild = 2400,
                            RoomNumber = 101
                        },
                        new
                        {
                            Id = 77,
                            ApartmentId = 16,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 3,
                            PricePerAdult = 5500,
                            PricePerChild = 2450,
                            RoomNumber = 102
                        },
                        new
                        {
                            Id = 78,
                            ApartmentId = 16,
                            IsAvailabe = false,
                            MaxNumberOfPeople = 7,
                            PricePerAdult = 5400,
                            PricePerChild = 2000,
                            RoomNumber = 103
                        },
                        new
                        {
                            Id = 79,
                            ApartmentId = 16,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 4,
                            PricePerAdult = 6000,
                            PricePerChild = 3400,
                            RoomNumber = 104
                        },
                        new
                        {
                            Id = 80,
                            ApartmentId = 16,
                            IsAvailabe = true,
                            MaxNumberOfPeople = 4,
                            PricePerAdult = 5050,
                            PricePerChild = 2700,
                            RoomNumber = 105
                        });
                });

            modelBuilder.Entity("Aapartment.Dal.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "be73785a-c3ee-4e57-9c3a-049891a30713",
                            Email = "tesztelek@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Teszt",
                            LastName = "Elek",
                            LockoutEnabled = false,
                            NormalizedEmail = "TESZTELEK@GMAIL.COM",
                            NormalizedUserName = "TESZTELEK",
                            PasswordHash = "AQAAAAEAACcQAAAAEIHDARrWsCZc5QOCeQ4wWdvkivfYwA2tPRoPIy/G33U4U5IOhvJJyRouOt9zLk3/DA==",
                            PhoneNumber = "06/30-152-5123",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "384136cd-4c29-4969-8558-ce17373772f3",
                            TwoFactorEnabled = false,
                            UserName = "tesztelek"
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "93fbba93-898d-40c6-b5b0-698e8d89c721",
                            Email = "wincheszter@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Winch",
                            LastName = "Eszter",
                            LockoutEnabled = false,
                            NormalizedEmail = "WINCHESZTER@GMAIL.COM",
                            NormalizedUserName = "WINCHESZTER",
                            PasswordHash = "AQAAAAEAACcQAAAAEIwaS+U6mg3VqnFi5SnZgE+Ew8BPkZMTjVEsOqW6SYyT8VYWws+mgD78bxHKFn0K2A==",
                            PhoneNumber = "06/30-152-5123",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "03dde34b-092f-461e-a718-92c83e39661a",
                            TwoFactorEnabled = false,
                            UserName = "wincheszter"
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c00fe948-17dd-498b-9778-3b6985c1f592",
                            Email = "kbela@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Kis",
                            LastName = "Béla",
                            LockoutEnabled = false,
                            NormalizedEmail = "KBELA@GMAIL.COM",
                            NormalizedUserName = "KBELA",
                            PasswordHash = "AQAAAAEAACcQAAAAEK9JM1WSCho+CX7LLIb9dpO3LEoIOHfVtUUtmp3OPaWlZvcQnyzqWo2tNKlwKPXWvQ==",
                            PhoneNumber = "06/30-152-5123",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3df1da4b-79d2-424a-ba8d-1a0ce7389514",
                            TwoFactorEnabled = false,
                            UserName = "kbela"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = "49238e4b-4c47-424e-86a6-e6690a61bb35",
                            Name = "ADMIN",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = "167729fe-511a-466d-83d3-644c132e6e73",
                            Name = "GUEST",
                            NormalizedName = "GUEST"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = 2,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Aapartment.Dal.Entities.Apartment", b =>
                {
                    b.OwnsOne("Aapartment.Dal.Entities.Address", "Address", b1 =>
                        {
                            b1.Property<int?>("ApartmentId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("City")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Country")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Street")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("ZipCode")
                                .HasColumnType("int");

                            b1.HasKey("ApartmentId");

                            b1.ToTable("Apartments");

                            b1.WithOwner()
                                .HasForeignKey("ApartmentId");

                            b1.HasData(
                                new
                                {
                                    ApartmentId = 4,
                                    City = "Honolulu",
                                    Country = "USA",
                                    Street = "Upalu St street 3",
                                    ZipCode = 96705
                                },
                                new
                                {
                                    ApartmentId = 3,
                                    City = "Peking",
                                    Country = "China",
                                    Street = "Chicaego street 45",
                                    ZipCode = 11004
                                },
                                new
                                {
                                    ApartmentId = 2,
                                    City = "Madrid",
                                    Country = "Spain",
                                    Street = "Bueno street 45",
                                    ZipCode = 3424
                                },
                                new
                                {
                                    ApartmentId = 1,
                                    City = "New York",
                                    Country = "USA",
                                    Street = "Pearl street 72",
                                    ZipCode = 5504
                                },
                                new
                                {
                                    ApartmentId = 5,
                                    City = "Budapest",
                                    Country = "Hungary",
                                    Street = "Havanna St street 3",
                                    ZipCode = 1181
                                },
                                new
                                {
                                    ApartmentId = 6,
                                    City = "Tokyo",
                                    Country = "Japan",
                                    Street = "Kaumu street 410",
                                    ZipCode = 5620
                                },
                                new
                                {
                                    ApartmentId = 7,
                                    City = "Delhi",
                                    Country = "India",
                                    Street = "Temple street 80",
                                    ZipCode = 41023
                                },
                                new
                                {
                                    ApartmentId = 8,
                                    City = "Shanghai",
                                    Country = "China",
                                    Street = "Ruraro street 91",
                                    ZipCode = 632302
                                },
                                new
                                {
                                    ApartmentId = 9,
                                    City = "Sao Paulo",
                                    Country = "Brazil",
                                    Street = "Peloza street 33",
                                    ZipCode = 5231
                                },
                                new
                                {
                                    ApartmentId = 10,
                                    City = "Mexico City",
                                    Country = "Mexico",
                                    Street = "Mehikan street 28",
                                    ZipCode = 2468
                                },
                                new
                                {
                                    ApartmentId = 11,
                                    City = "Dhaka",
                                    Country = "Bangladesh",
                                    Street = "Proauro street 11",
                                    ZipCode = 9743
                                },
                                new
                                {
                                    ApartmentId = 12,
                                    City = "Cairo",
                                    Country = "Egypt",
                                    Street = "Pyramor street 52",
                                    ZipCode = 7531
                                },
                                new
                                {
                                    ApartmentId = 13,
                                    City = "Osaka",
                                    Country = "Japan",
                                    Street = "Muramura street 3",
                                    ZipCode = 8232
                                },
                                new
                                {
                                    ApartmentId = 14,
                                    City = "Istanbul",
                                    Country = "Turkey",
                                    Street = "Gyromar street 45",
                                    ZipCode = 7821
                                },
                                new
                                {
                                    ApartmentId = 15,
                                    City = "Manila",
                                    Country = "Philippines",
                                    Street = "Kaucor street 85",
                                    ZipCode = 36301
                                },
                                new
                                {
                                    ApartmentId = 16,
                                    City = "Los Angeles",
                                    Country = "USA",
                                    Street = "Fedora street 74",
                                    ZipCode = 74511
                                });
                        });

                    b.OwnsMany("Aapartment.Dal.Entities.Service", "Services", b1 =>
                        {
                            b1.Property<int?>("ApartmentId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Icon")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Name")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ApartmentId", "Id");

                            b1.ToTable("Service");

                            b1.WithOwner()
                                .HasForeignKey("ApartmentId");

                            b1.HasData(
                                new
                                {
                                    ApartmentId = 1,
                                    Id = 1,
                                    Icon = "fas fa-wifi",
                                    Name = "Free wifi"
                                },
                                new
                                {
                                    ApartmentId = 1,
                                    Id = 2,
                                    Icon = "fas fa-paw",
                                    Name = "Pets allowed"
                                },
                                new
                                {
                                    ApartmentId = 1,
                                    Id = 3,
                                    Icon = "fas fa-shuttle-van",
                                    Name = "Airport shuttle"
                                },
                                new
                                {
                                    ApartmentId = 1,
                                    Id = 4,
                                    Icon = "fas fa-smoking-ban",
                                    Name = "Non-smoking rooms"
                                },
                                new
                                {
                                    ApartmentId = 1,
                                    Id = 5,
                                    Icon = "fas fa-users",
                                    Name = "Family rooms"
                                },
                                new
                                {
                                    ApartmentId = 1,
                                    Id = 6,
                                    Icon = "fas fa-umbrella-beach",
                                    Name = "Terrace"
                                },
                                new
                                {
                                    ApartmentId = 2,
                                    Id = 7,
                                    Icon = "fas fa-wifi",
                                    Name = "Free wifi"
                                },
                                new
                                {
                                    ApartmentId = 2,
                                    Id = 8,
                                    Icon = "fas fa-paw",
                                    Name = "Pets allowed"
                                },
                                new
                                {
                                    ApartmentId = 2,
                                    Id = 9,
                                    Icon = "fas fa-shuttle-van",
                                    Name = "Airport shuttle"
                                },
                                new
                                {
                                    ApartmentId = 2,
                                    Id = 10,
                                    Icon = "fas fa-smoking-ban",
                                    Name = "Non-smoking rooms"
                                },
                                new
                                {
                                    ApartmentId = 2,
                                    Id = 11,
                                    Icon = "fas fa-users",
                                    Name = "Family rooms"
                                },
                                new
                                {
                                    ApartmentId = 2,
                                    Id = 12,
                                    Icon = "fas fa-umbrella-beach",
                                    Name = "Terrace"
                                },
                                new
                                {
                                    ApartmentId = 3,
                                    Id = 13,
                                    Icon = "fas fa-wifi",
                                    Name = "Free wifi"
                                },
                                new
                                {
                                    ApartmentId = 3,
                                    Id = 14,
                                    Icon = "fas fa-paw",
                                    Name = "Pets allowed"
                                },
                                new
                                {
                                    ApartmentId = 3,
                                    Id = 15,
                                    Icon = "fas fa-shuttle-van",
                                    Name = "Airport shuttle"
                                },
                                new
                                {
                                    ApartmentId = 3,
                                    Id = 16,
                                    Icon = "fas fa-smoking-ban",
                                    Name = "Non-smoking rooms"
                                },
                                new
                                {
                                    ApartmentId = 3,
                                    Id = 17,
                                    Icon = "fas fa-users",
                                    Name = "Family rooms"
                                },
                                new
                                {
                                    ApartmentId = 3,
                                    Id = 18,
                                    Icon = "fas fa-umbrella-beach",
                                    Name = "Terrace"
                                },
                                new
                                {
                                    ApartmentId = 4,
                                    Id = 19,
                                    Icon = "fas fa-wifi",
                                    Name = "Free wifi"
                                },
                                new
                                {
                                    ApartmentId = 4,
                                    Id = 20,
                                    Icon = "fas fa-paw",
                                    Name = "Pets allowed"
                                },
                                new
                                {
                                    ApartmentId = 4,
                                    Id = 21,
                                    Icon = "fas fa-shuttle-van",
                                    Name = "Airport shuttle"
                                },
                                new
                                {
                                    ApartmentId = 4,
                                    Id = 22,
                                    Icon = "fas fa-smoking-ban",
                                    Name = "Non-smoking rooms"
                                },
                                new
                                {
                                    ApartmentId = 4,
                                    Id = 23,
                                    Icon = "fas fa-users",
                                    Name = "Family rooms"
                                },
                                new
                                {
                                    ApartmentId = 4,
                                    Id = 24,
                                    Icon = "fas fa-umbrella-beach",
                                    Name = "Terrace"
                                },
                                new
                                {
                                    ApartmentId = 5,
                                    Id = 25,
                                    Icon = "fas fa-wifi",
                                    Name = "Free wifi"
                                },
                                new
                                {
                                    ApartmentId = 5,
                                    Id = 26,
                                    Icon = "fas fa-paw",
                                    Name = "Pets allowed"
                                },
                                new
                                {
                                    ApartmentId = 5,
                                    Id = 27,
                                    Icon = "fas fa-shuttle-van",
                                    Name = "Airport shuttle"
                                },
                                new
                                {
                                    ApartmentId = 6,
                                    Id = 28,
                                    Icon = "fas fa-smoking-ban",
                                    Name = "Non-smoking rooms"
                                },
                                new
                                {
                                    ApartmentId = 6,
                                    Id = 29,
                                    Icon = "fas fa-users",
                                    Name = "Family rooms"
                                },
                                new
                                {
                                    ApartmentId = 6,
                                    Id = 30,
                                    Icon = "fas fa-umbrella-beach",
                                    Name = "Terrace"
                                },
                                new
                                {
                                    ApartmentId = 6,
                                    Id = 31,
                                    Icon = "fas fa-wifi",
                                    Name = "Free wifi"
                                },
                                new
                                {
                                    ApartmentId = 7,
                                    Id = 32,
                                    Icon = "fas fa-paw",
                                    Name = "Pets allowed"
                                },
                                new
                                {
                                    ApartmentId = 7,
                                    Id = 33,
                                    Icon = "fas fa-shuttle-van",
                                    Name = "Airport shuttle"
                                },
                                new
                                {
                                    ApartmentId = 7,
                                    Id = 34,
                                    Icon = "fas fa-smoking-ban",
                                    Name = "Non-smoking rooms"
                                },
                                new
                                {
                                    ApartmentId = 7,
                                    Id = 35,
                                    Icon = "fas fa-users",
                                    Name = "Family rooms"
                                },
                                new
                                {
                                    ApartmentId = 7,
                                    Id = 36,
                                    Icon = "fas fa-umbrella-beach",
                                    Name = "Terrace"
                                },
                                new
                                {
                                    ApartmentId = 7,
                                    Id = 37,
                                    Icon = "fas fa-wifi",
                                    Name = "Free wifi"
                                },
                                new
                                {
                                    ApartmentId = 8,
                                    Id = 38,
                                    Icon = "fas fa-paw",
                                    Name = "Pets allowed"
                                },
                                new
                                {
                                    ApartmentId = 8,
                                    Id = 39,
                                    Icon = "fas fa-shuttle-van",
                                    Name = "Airport shuttle"
                                },
                                new
                                {
                                    ApartmentId = 8,
                                    Id = 40,
                                    Icon = "fas fa-smoking-ban",
                                    Name = "Non-smoking rooms"
                                },
                                new
                                {
                                    ApartmentId = 8,
                                    Id = 41,
                                    Icon = "fas fa-users",
                                    Name = "Family rooms"
                                },
                                new
                                {
                                    ApartmentId = 9,
                                    Id = 42,
                                    Icon = "fas fa-umbrella-beach",
                                    Name = "Terrace"
                                },
                                new
                                {
                                    ApartmentId = 9,
                                    Id = 43,
                                    Icon = "fas fa-wifi",
                                    Name = "Free wifi"
                                },
                                new
                                {
                                    ApartmentId = 9,
                                    Id = 44,
                                    Icon = "fas fa-paw",
                                    Name = "Pets allowed"
                                },
                                new
                                {
                                    ApartmentId = 9,
                                    Id = 45,
                                    Icon = "fas fa-shuttle-van",
                                    Name = "Airport shuttle"
                                },
                                new
                                {
                                    ApartmentId = 9,
                                    Id = 46,
                                    Icon = "fas fa-smoking-ban",
                                    Name = "Non-smoking rooms"
                                },
                                new
                                {
                                    ApartmentId = 10,
                                    Id = 47,
                                    Icon = "fas fa-users",
                                    Name = "Family rooms"
                                },
                                new
                                {
                                    ApartmentId = 10,
                                    Id = 48,
                                    Icon = "fas fa-umbrella-beach",
                                    Name = "Terrace"
                                },
                                new
                                {
                                    ApartmentId = 10,
                                    Id = 49,
                                    Icon = "fas fa-wifi",
                                    Name = "Free wifi"
                                },
                                new
                                {
                                    ApartmentId = 10,
                                    Id = 50,
                                    Icon = "fas fa-paw",
                                    Name = "Pets allowed"
                                },
                                new
                                {
                                    ApartmentId = 11,
                                    Id = 51,
                                    Icon = "fas fa-shuttle-van",
                                    Name = "Airport shuttle"
                                },
                                new
                                {
                                    ApartmentId = 11,
                                    Id = 52,
                                    Icon = "fas fa-smoking-ban",
                                    Name = "Non-smoking rooms"
                                },
                                new
                                {
                                    ApartmentId = 11,
                                    Id = 53,
                                    Icon = "fas fa-users",
                                    Name = "Family rooms"
                                },
                                new
                                {
                                    ApartmentId = 11,
                                    Id = 54,
                                    Icon = "fas fa-umbrella-beach",
                                    Name = "Terrace"
                                },
                                new
                                {
                                    ApartmentId = 11,
                                    Id = 55,
                                    Icon = "fas fa-wifi",
                                    Name = "Free wifi"
                                },
                                new
                                {
                                    ApartmentId = 12,
                                    Id = 56,
                                    Icon = "fas fa-paw",
                                    Name = "Pets allowed"
                                },
                                new
                                {
                                    ApartmentId = 12,
                                    Id = 57,
                                    Icon = "fas fa-shuttle-van",
                                    Name = "Airport shuttle"
                                },
                                new
                                {
                                    ApartmentId = 12,
                                    Id = 58,
                                    Icon = "fas fa-smoking-ban",
                                    Name = "Non-smoking rooms"
                                },
                                new
                                {
                                    ApartmentId = 12,
                                    Id = 59,
                                    Icon = "fas fa-users",
                                    Name = "Family rooms"
                                },
                                new
                                {
                                    ApartmentId = 12,
                                    Id = 60,
                                    Icon = "fas fa-umbrella-beach",
                                    Name = "Terrace"
                                },
                                new
                                {
                                    ApartmentId = 13,
                                    Id = 61,
                                    Icon = "fas fa-wifi",
                                    Name = "Free wifi"
                                },
                                new
                                {
                                    ApartmentId = 14,
                                    Id = 62,
                                    Icon = "fas fa-paw",
                                    Name = "Pets allowed"
                                },
                                new
                                {
                                    ApartmentId = 14,
                                    Id = 63,
                                    Icon = "fas fa-shuttle-van",
                                    Name = "Airport shuttle"
                                },
                                new
                                {
                                    ApartmentId = 15,
                                    Id = 64,
                                    Icon = "fas fa-smoking-ban",
                                    Name = "Non-smoking rooms"
                                },
                                new
                                {
                                    ApartmentId = 15,
                                    Id = 65,
                                    Icon = "fas fa-users",
                                    Name = "Family rooms"
                                },
                                new
                                {
                                    ApartmentId = 15,
                                    Id = 66,
                                    Icon = "fas fa-umbrella-beach",
                                    Name = "Terrace"
                                },
                                new
                                {
                                    ApartmentId = 15,
                                    Id = 67,
                                    Icon = "fas fa-wifi",
                                    Name = "Free wifi"
                                },
                                new
                                {
                                    ApartmentId = 16,
                                    Id = 68,
                                    Icon = "fas fa-paw",
                                    Name = "Pets allowed"
                                },
                                new
                                {
                                    ApartmentId = 16,
                                    Id = 69,
                                    Icon = "fas fa-shuttle-van",
                                    Name = "Airport shuttle"
                                },
                                new
                                {
                                    ApartmentId = 16,
                                    Id = 70,
                                    Icon = "fas fa-smoking-ban",
                                    Name = "Non-smoking rooms"
                                },
                                new
                                {
                                    ApartmentId = 16,
                                    Id = 71,
                                    Icon = "fas fa-users",
                                    Name = "Family rooms"
                                },
                                new
                                {
                                    ApartmentId = 16,
                                    Id = 72,
                                    Icon = "fas fa-umbrella-beach",
                                    Name = "Terrace"
                                });
                        });
                });

            modelBuilder.Entity("Aapartment.Dal.Entities.Booking", b =>
                {
                    b.HasOne("Aapartment.Dal.Entities.Room", "Room")
                        .WithMany("Bookings")
                        .HasForeignKey("RoomId")
                        .HasConstraintName("FK_Rooms_Bookings");

                    b.HasOne("Aapartment.Dal.Entities.User", null)
                        .WithMany("Bookings")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Users_Bookings");

                    b.HasOne("Aapartment.Dal.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId1");
                });

            modelBuilder.Entity("Aapartment.Dal.Entities.Review", b =>
                {
                    b.HasOne("Aapartment.Dal.Entities.Apartment", "Apartment")
                        .WithMany("Reviews")
                        .HasForeignKey("ApartmentId")
                        .HasConstraintName("FK_Reviews_Apartments");

                    b.HasOne("Aapartment.Dal.Entities.User", null)
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Users_Reviews");

                    b.HasOne("Aapartment.Dal.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId1");
                });

            modelBuilder.Entity("Aapartment.Dal.Entities.Room", b =>
                {
                    b.HasOne("Aapartment.Dal.Entities.Apartment", "Apartment")
                        .WithMany("Rooms")
                        .HasForeignKey("ApartmentId")
                        .HasConstraintName("FK_Rooms_Apartments");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Aapartment.Dal.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("Aapartment.Dal.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aapartment.Dal.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("Aapartment.Dal.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
